name: Tests
on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  go-tests:
    name: Test Pre-Built Libs
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        version: [1.23, 1.24]
        os: [macos-13, macos-14, ubuntu-latest, ubuntu-24.04-arm, windows-latest]
        include:
          - os: "macos-13"
            dir: "darwin-amd64"
          - os: "macos-14"
            dir: "darwin-arm64"
          - os: "ubuntu-latest"
            dir: "linux-amd64"
          - os: "ubuntu-24.04-arm"
            dir: "linux-arm64"
          - os: "windows-latest"
            dir: "windows-amd64"
          - os: "ubuntu-latest"
            dir: "custom-duckdb-linux-amd64"
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.version }}
      - name: Test ${{ matrix.dir }}
        run: |
          cd ${{ matrix.dir }}
          go test
          go test -tags=debug_bindings

  dynamic-lib-tests:
    name: Test Dynamic Libs
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        version: [1.23, 1.24]
        os: [macos-13, macos-14, ubuntu-latest, ubuntu-24.04-arm]
        include:
          - os: "macos-13"
            filename: "libduckdb-osx-universal"
            filepath: "DYLD_LIBRARY_PATH"
          - os: "macos-14"
            filename: "libduckdb-osx-universal"
            filepath: "DYLD_LIBRARY_PATH"
          - os: "ubuntu-latest"
            filename: "libduckdb-linux-amd64"
            filepath: "LD_LIBRARY_PATH"
          - os: "ubuntu-24.04-arm"
            filename: "libduckdb-linux-arm64"
            filepath: "LD_LIBRARY_PATH"
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.version }}
      - name: Test ${{ matrix.filename }}
        run: |
          make test.dynamic.lib FILENAME=${{ matrix.filename }}
          CGO_ENABLED=1 CGO_LDFLAGS="-lduckdb -L${SRCDIR}dynamic-dir" ${{ matrix.filepath }}=${SRCDIR}dynamic-dir go test
          CGO_ENABLED=1 CGO_LDFLAGS="-lduckdb -L${SRCDIR}dynamic-dir" ${{ matrix.filepath }}=${SRCDIR}dynamic-dir go test -tags=debug_bindings
          CGO_ENABLED=1 CGO_LDFLAGS="-L${SRCDIR}dynamic-dir" ${{ matrix.filepath }}=${SRCDIR}dynamic-dir go test -tags=duckdb_use_lib
          CGO_ENABLED=1 CGO_LDFLAGS="-L${SRCDIR}dynamic-dir" ${{ matrix.filepath }}=${SRCDIR}dynamic-dir go test -tags=duckdb_use_lib,debug_bindings

  static-lib-tests:
    name: Test Static Libs
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        version: [1.23, 1.24]
        os: [macos-13, macos-14, ubuntu-latest, ubuntu-24.04-arm]
        # FIXME: Archive these into a single libduckdb_static.a (similar to DuckDB's bundle-library target).
        include:
          - os: "macos-13"
            dir: "darwin-amd64"
            flags: "-lduckdb_static -lautocomplete_extension -lcore_functions_extension -licu_extension -ljson_extension -lparquet_extension -ltpcds_extension -ltpch_extension -lduckdb_fastpforlib -lduckdb_fmt -lduckdb_fsst -lduckdb_hyperloglog -lduckdb_mbedtls -lduckdb_miniz -lduckdb_pg_query -lduckdb_re2 -lduckdb_skiplistlib -lduckdb_utf8proc -lduckdb_yyjson -lduckdb_zstd -lc++"
          - os: "macos-14"
            dir: "darwin-arm64"
            flags: "-lduckdb_static -lautocomplete_extension -lcore_functions_extension -licu_extension -ljson_extension -lparquet_extension -ltpcds_extension -ltpch_extension -lduckdb_fastpforlib -lduckdb_fmt -lduckdb_fsst -lduckdb_hyperloglog -lduckdb_mbedtls -lduckdb_miniz -lduckdb_pg_query -lduckdb_re2 -lduckdb_skiplistlib -lduckdb_utf8proc -lduckdb_yyjson -lduckdb_zstd -lc++"
          - os: "ubuntu-latest"
            dir: "linux-amd64"
            flags: "-lduckdb_static -lautocomplete_extension -lcore_functions_extension -licu_extension -ljson_extension -lparquet_extension -ljemalloc_extension -ltpcds_extension -ltpch_extension -lduckdb_fastpforlib -lduckdb_fmt -lduckdb_fsst -lduckdb_hyperloglog -lduckdb_mbedtls -lduckdb_miniz -lduckdb_pg_query -lduckdb_re2 -lduckdb_skiplistlib -lduckdb_utf8proc -lduckdb_yyjson -lduckdb_zstd -lstdc++ -lm -ldl"
          - os: "ubuntu-24.04-arm"
            dir: "linux-arm64"
            flags: "-lduckdb_static -lautocomplete_extension -lcore_functions_extension -licu_extension -ljson_extension -lparquet_extension -ljemalloc_extension -ltpcds_extension -ltpch_extension -lduckdb_fastpforlib -lduckdb_fmt -lduckdb_fsst -lduckdb_hyperloglog -lduckdb_mbedtls -lduckdb_miniz -lduckdb_pg_query -lduckdb_re2 -lduckdb_skiplistlib -lduckdb_utf8proc -lduckdb_yyjson -lduckdb_zstd -lstdc++ -lm -ldl"
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.version }}
      - name: Test ${{ matrix.dir }}
        run: |
          CGO_ENABLED=1 CPPFLAGS="-DDUCKDB_STATIC_BUILD" CGO_LDFLAGS="${{ matrix.flags }} -L${SRCDIR}${{ matrix.dir }}/" go test
          CGO_ENABLED=1 CPPFLAGS="-DDUCKDB_STATIC_BUILD" CGO_LDFLAGS="${{ matrix.flags }} -L${SRCDIR}${{ matrix.dir }}/" go test -tags=debug_bindings
          CGO_ENABLED=1 CGO_LDFLAGS="${{ matrix.flags }} -L${SRCDIR}${{ matrix.dir }}/" go test -tags=duckdb_use_static_lib
          CGO_ENABLED=1 CGO_LDFLAGS="${{ matrix.flags }} -L${SRCDIR}${{ matrix.dir }}/" go test -tags=duckdb_use_static_lib,debug_bindings